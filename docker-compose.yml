version: '3.5'

services:
  react:
    container_name: react
    build:
      context: '.'
      dockerfile: 'docker/react.Dockerfile'
    environment:
      - NODE_ENV=development
      - CI=true
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    ports:
      - 3000:3000
    networks:
      - php5-mysql

  apache-php:
    container_name: apache-php
    build:
      context: './docker'
      dockerfile: 'apache-php.Dockerfile'
    volumes:
      - ./api:/var/www/html/api
      - ./.htaccess:/var/www/html/.htaccess
      - ./build:/var/www/html
    ports:
      - 3001:80
    networks:
      - php5-mysql

  mysql: # https://hub.docker.com/_/mysql
    image: mysql:8.0
    command:
      [
        --default-authentication-plugin=mysql_native_password,
        --character-set-server=utf8mb4,
        --collation-server=utf8mb4_unicode_ci,
      ]
    container_name: mysql
    restart: always
    ports:
      - '3306:3306'
    volumes:
      - ./db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: admin # Username: admin; Password admin; Dev only
    networks:
      - php5-mysql

  phpmyadmin: # https://hub.docker.com/r/phpmyadmin/phpmyadmin
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - '3002:80'
    environment:
      PMA_HOST: mysql
      UPLOAD_LIMIT: 64M
    networks:
      - php5-mysql

  live-reloader:
    image: apogiatzis/livereloading
    container_name: live-reloader
    privileged: true
    environment:
      - RELOAD_DELAY=1.5 # seconds
      - RELOAD_CONTAINER=apache-php
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './api:/var/www/html/api'
      - ./.htaccess:/var/www/html/.htaccess
      - ./build:/var/www/html

networks:
  php5-mysql:
    external: false
    name: php5-mysql
